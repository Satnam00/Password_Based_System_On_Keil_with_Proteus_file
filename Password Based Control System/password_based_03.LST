C51 COMPILER V9.01   PASSWORD_BASED_03                                                     09/04/2016 10:11:24 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PASSWORD_BASED_03
OBJECT MODULE PLACED IN password_based_03.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE password_based_03.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #define LCDDATA P2 
   3          sbit RS= P3^0;
   4          sbit E = P3^1;
   5          sbit C1 = P1^0;
   6          sbit C2 = P1^1;
   7          sbit C3 = P1^2;
   8          sbit R1 = P1^3;
   9          sbit R2 = P1^4;
  10          sbit R3 = P1^5;
  11          sbit R4 = P1^6;
  12          void mydelay(int i)
  13          {       
  14   1       int m,n;
  15   1       for (m=0;m<i;m++)
  16   1        {
  17   2         for (n=0;n<1000;n++)
  18   2         {}
  19   2        }
  20   1      }
  21          void lcd_data(char c)
  22          {RS=1;E=1;LCDDATA=c;mydelay(1);E=0;}
  23          void lcd_cmd(char c)
  24          {RS=0;E=1;LCDDATA=c;mydelay(1);E=0;}
  25          void strp(unsigned char *str)
  26           {
  27   1        while(*str!='\0')
  28   1         {
  29   2          lcd_data(*str);
  30   2          str++;
  31   2         }
  32   1       } 
  33           void Pass()
  34          {
  35   1       lcd_cmd(0x38);
  36   1       lcd_cmd(0x01);
  37   1       lcd_cmd(0x0e);
  38   1       lcd_cmd(0x80);
  39   1       strp("Enter Password");
  40   1      } 
  41          void lcd_init()
  42          {
  43   1       
  44   1       lcd_cmd(0x38);
  45   1       
  46   1       lcd_cmd(0x0e);
  47   1       lcd_cmd(0xc0);
  48   1      }
  49          void main()
  50          {
  51   1       int n1,n2,s;
  52   1           n1=n2=0;
  53   1               
  54   1       Pass();                 
  55   1       lcd_init();
C51 COMPILER V9.01   PASSWORD_BASED_03                                                     09/04/2016 10:11:24 PAGE 2   

  56   1       R1=R2=R3=R4=C1=C2=C3=1;
  57   1       while(1)
  58   1        {
  59   2         C1=0;
  60   2         if(R1==0) { lcd_data('1');while(R1==0);n1=n1*10+1;} 
  61   2         if(R2==0)  {lcd_data('4');while(R2==0);n1=n1*10+4;} 
  62   2         if(R3==0)  {lcd_data('7');while(R3==0);n1=n1*10+7;} 
  63   2         if(R4==0)  {while(R4==0);n1=0;lcd_cmd(0xc0);strp("                 ");lcd_cmd(0xc0);}
  64   2         C1=1; C2=0;
  65   2         if(R1==0)  {lcd_data('2');while(R1==0);n1=n1*10+2;}
  66   2         if(R2==0)  {lcd_data('5');while(R2==0);n1=n1*10+5;} 
  67   2         if(R3==0)  {lcd_data('8');while(R3==0);n1=n1*10+8;}
  68   2         if(R4==0)  {lcd_data('0');while(R4==0);n1=n1*10+0;} 
  69   2         C2=1;          C3=0;
  70   2         if(R1==0)  {lcd_data('3');while(R1==0);n1=n1*10+3;}
  71   2         if(R2==0)  {lcd_data('6');while(R2==0);n1=n1*10+6;} 
  72   2         if(R3==0)  {lcd_data('9');while(R3==0);n1=n1*10+9;}
  73   2         if(R4==0)  {while(R4==0);s=1;n2=20;} 
  74   2         C3=1;         
  75   2         mydelay(10);
  76   2         if(n2==20)
  77   2          {
  78   3               
  79   3               if(n1==s)
  80   3                {
  81   4                 lcd_cmd(0x01);
  82   4                 strp("You R Welcome");
  83   4                 lcd_cmd(0xc0);
  84   4                 strp("Agent");
  85   4                 mydelay(300);
  86   4                 lcd_cmd(0x01);
  87   4                 lcd_cmd(0x80);
  88   4                 strp("Secret Code is");       lcd_cmd(0xc0);
  89   4                 strp("558ddfw88");
  90   4                 mydelay(300);
  91   4                 lcd_cmd(0x01);
  92   4                 lcd_cmd(0x80);
  93   4                 n1=0;
  94   4                 n2=0;
  95   4                }
  96   3              else
  97   3               {
  98   4                lcd_cmd(0xc0);
  99   4                
 100   4                strp("Try again");
 101   4                mydelay(100);
 102   4                lcd_cmd(0xc0);
 103   4                strp("          ");
 104   4                lcd_cmd(0xc0);
 105   4                n1=0;
 106   4                n2=0;
 107   4               }
 108   3        }
 109   2       }
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    695    ----
   CONSTANT SIZE    =     99    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.01   PASSWORD_BASED_03                                                     09/04/2016 10:11:24 PAGE 3   

   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
